package com.senprojectbackend1.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProjectGalleryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectGalleryAllPropertiesEquals(ProjectGallery expected, ProjectGallery actual) {
        assertProjectGalleryAutoGeneratedPropertiesEquals(expected, actual);
        assertProjectGalleryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectGalleryAllUpdatablePropertiesEquals(ProjectGallery expected, ProjectGallery actual) {
        assertProjectGalleryUpdatableFieldsEquals(expected, actual);
        assertProjectGalleryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectGalleryAutoGeneratedPropertiesEquals(ProjectGallery expected, ProjectGallery actual) {
        assertThat(actual)
            .as("Verify ProjectGallery auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectGalleryUpdatableFieldsEquals(ProjectGallery expected, ProjectGallery actual) {
        assertThat(actual)
            .as("Verify ProjectGallery relevant properties")
            .satisfies(a -> assertThat(a.getImageUrl()).as("check imageUrl").isEqualTo(expected.getImageUrl()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getOrder()).as("check order").isEqualTo(expected.getOrder()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectGalleryUpdatableRelationshipsEquals(ProjectGallery expected, ProjectGallery actual) {
        assertThat(actual)
            .as("Verify ProjectGallery relationships")
            .satisfies(a -> assertThat(a.getProject()).as("check project").isEqualTo(expected.getProject()));
    }
}
