package com.senprojectbackend1.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProjectSectionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectSectionAllPropertiesEquals(ProjectSection expected, ProjectSection actual) {
        assertProjectSectionAutoGeneratedPropertiesEquals(expected, actual);
        assertProjectSectionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectSectionAllUpdatablePropertiesEquals(ProjectSection expected, ProjectSection actual) {
        assertProjectSectionUpdatableFieldsEquals(expected, actual);
        assertProjectSectionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectSectionAutoGeneratedPropertiesEquals(ProjectSection expected, ProjectSection actual) {
        assertThat(actual)
            .as("Verify ProjectSection auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectSectionUpdatableFieldsEquals(ProjectSection expected, ProjectSection actual) {
        assertThat(actual)
            .as("Verify ProjectSection relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getContent()).as("check content").isEqualTo(expected.getContent()))
            .satisfies(a -> assertThat(a.getMediaUrl()).as("check mediaUrl").isEqualTo(expected.getMediaUrl()))
            .satisfies(a -> assertThat(a.getOrder()).as("check order").isEqualTo(expected.getOrder()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectSectionUpdatableRelationshipsEquals(ProjectSection expected, ProjectSection actual) {
        assertThat(actual)
            .as("Verify ProjectSection relationships")
            .satisfies(a -> assertThat(a.getProject()).as("check project").isEqualTo(expected.getProject()));
    }
}
