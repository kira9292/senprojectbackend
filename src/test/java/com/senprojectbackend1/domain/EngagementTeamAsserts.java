package com.senprojectbackend1.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EngagementTeamAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEngagementTeamAllPropertiesEquals(EngagementTeam expected, EngagementTeam actual) {
        assertEngagementTeamAutoGeneratedPropertiesEquals(expected, actual);
        assertEngagementTeamAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEngagementTeamAllUpdatablePropertiesEquals(EngagementTeam expected, EngagementTeam actual) {
        assertEngagementTeamUpdatableFieldsEquals(expected, actual);
        assertEngagementTeamUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEngagementTeamAutoGeneratedPropertiesEquals(EngagementTeam expected, EngagementTeam actual) {
        assertThat(actual)
            .as("Verify EngagementTeam auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEngagementTeamUpdatableFieldsEquals(EngagementTeam expected, EngagementTeam actual) {
        assertThat(actual)
            .as("Verify EngagementTeam relevant properties")
            .satisfies(a -> assertThat(a.getLike()).as("check like").isEqualTo(expected.getLike()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEngagementTeamUpdatableRelationshipsEquals(EngagementTeam expected, EngagementTeam actual) {
        assertThat(actual)
            .as("Verify EngagementTeam relationships")
            .satisfies(a -> assertThat(a.getTeam()).as("check team").isEqualTo(expected.getTeam()))
            .satisfies(a -> assertThat(a.getUser()).as("check user").isEqualTo(expected.getUser()));
    }
}
