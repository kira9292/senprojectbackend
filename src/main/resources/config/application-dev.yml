# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  level:
    ROOT: WARN
    tech.jhipster: INFO
    com.senprojectbackend1: DEBUG

    # Désactiver les logs verbeux d'Eureka
    com.netflix.eureka: ERROR
    com.netflix.discovery: ERROR
    org.springframework.cloud.netflix.eureka: ERROR

    # Logs d'API calls - garder uniquement les essentiels
    org.springframework.web: INFO
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG
    org.springframework.security.web: INFO

    # Désactiver autres logs non essentiels
    org.springframework.boot.actuate: WARN
    org.springframework.cloud.config: WARN
    org.springframework.kafka: INFO
    org.apache.kafka: WARN
    org.springframework.boot.docker.compose: ERROR
    javax.management.remote.rmi: ERROR
    org.springframework.aop: ERROR
    org.hibernate.SQL: ERROR
    org.springframework.r2dbc: WARN
    liquibase: WARN
    org.springframework.cloud.sleuth: ERROR
    org.springframework.cloud.loadbalancer: ERROR
spring:
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    serialization:
      indent-output: true
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        prefer-ip-address: true
        health-check-path: ${management.endpoints.web.base-path}/health
        health-check-interval: 15s
        instance-id: ${spring.application.name}-dev:${spring.application.instance-id:${random.value}}
    function:
      definition: notificationConsumer
    stream:
      kafka:
        binder:
          brokers: localhost:29092
          auto-create-topics: true
          required-acks: 1
      bindings:
        notificationConsumer-in-0:
          destination: notification-topic
          content-type: application/json
          group: senproject-notification-consumer
          consumer:
            use-native-decoding: false
        notificationProducer-out-0:
          destination: notification-topic
          content-type: application/json

  liquibase:
    # Remove 'faker' if you do not want the sample data to be loaded automatically
    contexts: dev, faker
    url: jdbc:postgresql://localhost:5432/SenProjectBackend1
  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/SenProjectBackend1
    username: SenProjectBackend1
    password:
  thymeleaf:
    cache: false

server:
  port: 8081
  # make sure requests the proxy uri instead of the server one
  forward-headers-strategy: native

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  # CORS is disabled by default on microservices, as you should access them through a gateway.
  # If you want to enable it, please uncomment the configuration below.
  # cors:
  #   allowed-origins: "http://localhost:9000,https://localhost:9000"
  #   allowed-methods: "*"
  #   allowed-headers: "*"
  #   exposed-headers: "Authorization,Link,X-Total-Count"
  #   allow-credentials: true
  #   max-age: 1800
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: true
      host: localhost
      port: 5000
      ring-buffer-size: 512
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

#application:
#  kafka:
#    notification-topic: notification-topic
