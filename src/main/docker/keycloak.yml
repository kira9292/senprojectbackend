# Configuration Keycloak pour Production
name: senprojectbackend1

services:
  keycloak:
    image: lyak008/senproject-keycloak-prod:latest
    command: 'start --import-realm'
    env_file:
      - .env
    environment:
      # Base de données production (PostgreSQL)
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db:5432/${KEYCLOAK_DB_NAME}
      - KC_DB_USERNAME=${KEYCLOAK_DB_USERNAME}
      - KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}

      # Configuration réseau
      - KC_HOSTNAME_STRICT=false
      - KC_HTTP_ENABLED=true
      - KC_HTTP_PORT=9080
      - KC_HTTPS_PORT=9443

      # Sécurité
      - KC_PROXY=edge

      # Monitoring
      - KC_HEALTH_ENABLED=true
      - KC_HTTP_MANAGEMENT_PORT=9990

      # Admin
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN_USER}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}

      # Performance
      - KC_CACHE=ispn

      # Logging
      - KC_LOG_LEVEL=INFO
      - KC_HOSTNAME_STRICT_HTTPS=false

    ports:
      - '9080:9080'
      - '9443:9443'

    healthcheck:
      test: ['CMD-SHELL', 'bash /opt/keycloak/health-check.sh']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

    restart: unless-stopped

    depends_on:
      keycloak-db:
        condition: service_healthy

    labels:
      org.springframework.boot.ignore: true

  keycloak-db:
    image: postgres:15-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${KEYCLOAK_DB_NAME}
      - POSTGRES_USER=${KEYCLOAK_DB_USERNAME}
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD}
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${KEYCLOAK_DB_USERNAME} -d ${KEYCLOAK_DB_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  keycloak-db-data:
    driver: local

networks:
  keycloak-network:
    driver: bridge
